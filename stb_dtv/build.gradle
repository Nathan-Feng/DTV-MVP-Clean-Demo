apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

task makeJar(type: Jar) {
    delete 'build/libs/*.jar'
    def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
    archiveName = 'TestDtvApi_v' + android.defaultConfig.versionName + '_'+createTime+'.jar'
    from(project.zipTree("build/intermediates/packaged-classes/release/classes.jar")) // 添加这一行
//    from(project.zipTree("libs/xxx.jar")) // 添加这一行 用于索引第三方jar
    destinationDir = file('build/libs')
}

makeJar.dependsOn(build)
// ./gradlew makeJar 执行这个来生成jar

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.jakewharton.timber:timber:4.1.0'
    //rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    testImplementation 'org.mockito:mockito-core:1.10.19'

    //For AndroidX jetpack Lifecycle
    implementation 'androidx.appcompat:appcompat:1.1.0'
    def lifecycle_version = "2.0.0"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

}
